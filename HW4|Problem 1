class TriangleError < RuntimeError
end
class Triangle
  def initialize(x, y, z)
  @x = x
  @y = y
  @z = z
    end

  def kind
    if (x <= 0) || (y <= 0) || (z <= 0)
      raise(TriangleError)
    elsif (x + y <= z) || (y + z <= x) || (x + z <= y)
      raise(TriangleError)
    elsif (x == y) && (y == z) && (x = z)
      return :equilateral
    elsif (x == y) || (x == z) || (y == z) 
      return :isosceles
    else
      :scalene
    end
  end
end
